@page
@model kodex.Pages.AdminPostModel

<div asp-validation-summary="All"></div>

<form method="post" class="form">
    <fieldset>
        <legend>@ViewData["Title"]</legend>

        @*PostTypeID = 1*@

        <div class="form-group">
            <label asp-for="Post.Authors"></label>
            <div input-checkboxlist="Model.Authors" input-modelname="authors"></div>
        </div>

        <div class="form-group">
            <label asp-for="Post.Title"></label>
            <input asp-for="Post.Title" id="title" />
        </div>

        <div class="form-group">
            <label asp-for="Post.Slug"></label>
            <input asp-for="Post.Slug" id="slug" />
        </div>

        <div class="form-group">
            <label asp-for="Post.Description"></label>
            <input asp-for="Post.Description" />
        </div>

        <div class="form-group">
            <label asp-for="Post.ImageUrl"></label>
            <input asp-for="Post.ImageUrl" />
        </div>

        <div class="form-group">
            <input-checkbox asp-for="Post.IsPublic" label="Publish" />
        </div>

        <div class="form-group">
            <label asp-for="Post.Body"></label>
            <textarea asp-for="Post.Body" id="editor" rows="10"></textarea>
        </div>

        <div class="form-group">
            <label asp-for="Post.Excerpt"></label>
            <textarea asp-for="Post.Excerpt" id="excerpt" rows="3"></textarea>
        </div>

        <div class="form-group">
            <button type="submit" id="submit">Save</button>
        </div>

        <input type="hidden" asp-for="Post.ID" />
        <input type="hidden" asp-for="Post.BodyText" id="bodyText" />
    </fieldset>
</form>

@section Styles {
    <link rel="stylesheet" href="~/css/06-Pages/admin-post.css" />
}

@section Scripts {
    <script src="~/js/lib/ckeditor.js"></script>
    <script src="~/js/lib/slugify.js"></script>

    <script>
        // initiate ck editor
        ClassicEditor
            .create(document.querySelector('#editor'))
            .then(editor => {
                console.log(editor);

                // generate suggested excerpt from body
                editor.ui.focusTracker.on('change:isFocused', (evt, name, value) => {
                    if (value) return; // only update on blur

                    let r = RegExp(/[^.]+[.]/);
                    let bodyText = document.querySelector('.ck-content').innerText;
                    document.querySelector('#excerpt').value = r.test(bodyText) ? bodyText.match(r)[0] : bodyText;
                });
            })
            .catch(error => {
                console.error(error);
            });

        // save text from editor
        document.querySelector('#submit').addEventListener('click', event => {
            document.querySelector('#bodyText').value = document.querySelector('.ck-content').innerText;
        });

        // generate suggested URL slug from title
        document.querySelector('#title').addEventListener('keyup', event => {
            document.querySelector('#slug').value = slugify(event.target.value, { lower: true });
        });
    </script>
}
